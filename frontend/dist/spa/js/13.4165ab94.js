(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[13],{"840a":function(t,e,o){"use strict";o.r(e);var s=function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",[o("breadcrumb",{attrs:{buttons:"",title:t.$parent.audit.name}},[o("div",{attrs:{slot:"buttons"},slot:"buttons"},[o("q-btn-dropdown",{staticClass:"q-mr-sm",attrs:{label:"Import","no-caps":"",color:"grey-4","text-color":"black","auto-close":""}},[o("q-list",[o("q-item",{attrs:{clickable:""},on:{click:function(e){return t.$refs.nmapFile.click()}}},[o("q-item-section",[o("q-item-label",[t._v("\n                            Nmap\n                            "),o("input",{ref:"nmapFile",staticClass:"hidden",attrs:{type:"file",accept:".xml"},on:{change:function(e){return t.importNetworkScan(e.target.files,"nmap")}}})])],1)],1),o("q-separator"),o("q-item",{attrs:{clickable:""},on:{click:function(e){return t.$refs.nessusFile.click()}}},[o("q-item-section",[o("q-item-label",[t._v("\n                            Nessus\n                            "),o("input",{ref:"nessusFile",staticClass:"hidden",attrs:{type:"file",accept:".nessus"},on:{change:function(e){return t.importNetworkScan(e.target.files,"nessus")}}})])],1)],1)],1)],1),o("q-btn",{attrs:{color:"positive",label:"Save (ctrl+s)","no-caps":""},on:{click:t.updateAuditNetwork}})],1)]),o("div",{staticClass:"row q-col-gutter-md q-pa-md"},[o("div",{staticClass:"col-md-6"},[o("q-card",[o("q-card-section",[t._v("Associate imported hosts with Scopes")]),o("q-separator"),t._l(t.audit.scope,(function(e){return o("q-card-section",{key:e.name},[o("span",{staticClass:"text-h6"},[t._v(t._s(e.name))]),o("div",{staticClass:"q-col-gutter-md row"},[o("q-select",{staticClass:"col-md-12",attrs:{multiple:"",label:t.selectHostsLabel,options:t.targetsOptions,"use-chips":"",clearable:"","options-sanitize":""},scopedSlots:t._u([{key:"append",fn:function(){return[o("q-btn",{attrs:{round:"",dense:"",flat:"",icon:"add"},on:{click:function(o){return!o.type.indexOf("key")&&t._k(o.keyCode,"close",void 0,o.key,void 0)?null:t.updateScopeHosts(e)}}})]},proxy:!0}],null,!0),model:{value:t.selectedTargets[e.name],callback:function(o){t.$set(t.selectedTargets,e.name,o)},expression:"selectedTargets[scope.name]"}}),t._l(e.hosts,(function(s,n){return o("div",[o("q-chip",{key:s.ip,staticClass:"col-md-6 cursor-pointer",attrs:{color:"blue-grey-7","text-color":"white",dense:"",square:"",removable:""},on:{remove:function(t){return e.hosts.splice(n,1)}},nativeOn:{click:function(e){t.currentHost=t.$_.cloneDeep(s)}}},[t._v("\n                            "+t._s(s.ip)+"\n                            ")])],1)}))],2)])}))],2)],1),null!==t.currentHost?o("div",{staticClass:"col-md-6"},[o("q-table",{staticStyle:{"background-color":"white"},attrs:{title:t.currentHost.ip+" ("+t.currentHost.hostname+")",data:t.currentHost.services,columns:t.dtHostHeaders,pagination:t.hostPagination,"row-key":"port"},on:{"update:pagination":function(e){t.hostPagination=e}}})],1):t._e()])],1)},n=[],a=(o("ac1f"),o("466d"),o("b0c0"),o("4de4"),o("2a19")),r=o("436b"),i=o("b3a4"),l=o("99ec"),c={data:function(){return{audit:{},auditOrig:{},targetsOptions:[],selectedTargets:[],currentHost:null,dtHostHeaders:[{name:"port",label:"Port",field:"port",align:"left",sortable:!0,sort:function(t,e){return parseInt(t,10)-parseInt(e,10)}},{name:"protocol",label:"Protocol",field:"protocol",align:"left",sortable:!0},{name:"name",label:"Service",field:"name",align:"left",sortable:!0},{name:"version",label:"Version",field:"version",align:"left",sortable:!0}],hostPagination:{page:1,rowsPerPage:20,sortBy:"port"}}},components:{Breadcrumb:i["a"]},mounted:function(){this.auditId=this.$route.params.auditId,this.getAuditNetwork(),this.$socket.emit("menu",{menu:"network",room:this.auditId});document.addEventListener("keydown",this._listener,!1)},destroyed:function(){document.removeEventListener("keydown",this._listener,!1)},beforeRouteLeave:function(t,e,o){this.$_.isEqual(this.audit,this.auditOrig)?o():r["a"].create({title:"There are unsaved changes !",message:"Do you really want to leave ?",ok:{label:"Confirm",color:"negative"},cancel:{label:"Cancel",color:"white"}}).onOk((function(){return o()}))},computed:{selectHostsLabel:function(){return this.targetsOptions&&this.targetsOptions.length>0?"Select Host":"Import Hosts first"}},methods:{_listener:function(t){(window.navigator.platform.match("Mac")?t.metaKey:t.ctrlKey)&&83==t.keyCode&&(t.preventDefault(),this.updateAuditNetwork())},getAuditNetwork:function(){var t=this;l["a"].getAuditNetwork(this.auditId).then((function(e){t.audit=e.data.datas,t.auditOrig=t.$_.cloneDeep(t.audit)})).catch((function(t){console.log(t)}))},updateAuditNetwork:function(){var t=this;l["a"].updateAuditNetwork(this.auditId,this.audit).then((function(){t.auditOrig=t.$_.cloneDeep(t.audit),a["a"].create({message:"Audit updated successfully",color:"positive",textColor:"white",position:"top-right"})})).catch((function(t){a["a"].create({message:t.response.data.datas,color:"negative",textColor:"white",position:"top-right"})}))},importNetworkScan:function(t,e){var o=this,s=t[0],n=new FileReader;n.onloadend=function(t){"nmap"===e?o.parseXmlNmap(n.result):"nessus"===e&&o.parseXmlNessus(n.result)},n.readAsText(s)},updateScopeHosts:function(t){for(var e=0;e<this.selectedTargets[t.name].length;e++)t.hosts.push(this.selectedTargets[t.name][e].host)},getXmlElementByAttribute:function(t,e,o){for(var s=0;s<t.length;s++)if(t[s].getAttribute(e)===o)return t[s];return null},parseXmlNmap:function(t){console.log("Starting Nmap parser");var e=new DOMParser,o=e.parseFromString(t,"application/xml");try{var s=o.getElementsByTagName("host");if(0==s.length)throw"Parsing Error: No 'host' element";for(var n=[],r=0;r<s.length;r++)if("up"===s[r].getElementsByTagName("status")[0].getAttribute("state")){var i={},l=s[r].getElementsByTagName("address")[0];if("undefined"==typeof l)throw"Parsing Error: No 'address' element in host number "+r;i["ip"]=l.getAttribute("addr");var c=s[r].getElementsByTagName("os")[0];if("undefined"!==typeof c){var u=c.getElementsByTagName("osclass")[0];i["os"]="undefined"==typeof u?"":u.getAttribute("osfamily")}var p=s[r].getElementsByTagName("hostnames")[0];if("undefined"===typeof p)i["hostname"]="Unknown";else{var d=this.getXmlElementByAttribute(p.getElementsByTagName("hostname"),"type","PTR");i["hostname"]=d?d.getAttribute("name"):"Unknown"}var m=s[r].getElementsByTagName("ports")[0];if("undefined"===typeof m)throw"Parsing Error: No 'ports' element in host number "+r;var g=m.getElementsByTagName("port");i["services"]=[];for(var h=0;h<g.length;h++){var f={};f["protocol"]=g[h].getAttribute("protocol"),f["port"]=g[h].getAttribute("portid"),f["state"]=g[h].getElementsByTagName("state")[0].getAttribute("state");var v=g[h].getElementsByTagName("service")[0];"undefined"===typeof v?(f["product"]="Unknown",f["name"]="Unknown",f["version"]="Unknown"):(f["product"]=v.getAttribute("product")||"Unknown",f["name"]=v.getAttribute("name")||"Unknown",f["version"]=v.getAttribute("version")||"Unknown"),console.log("Service found: "+JSON.stringify(f)),"open"===f["state"]&&i["services"].push(f)}n.push({label:i.ip,value:i.ip,host:i})}this.targetsOptions=n,a["a"].create({message:"Successfully imported ".concat(n.length," hosts"),color:"positive",textColor:"white",position:"top-right"})}catch(b){console.log(b),a["a"].create({message:"Error parsing Nmap",color:"negative",textColor:"white",position:"top-right"})}},parseXmlNessus:function(t){console.log("Starting Nessus parser");var e=new DOMParser,o=[],s=e.parseFromString(t,"application/xml");try{var n=s.getElementsByTagName("ReportHost");if(0==n.length)throw"Parsing Error: No 'ReportHost' element";for(var r=0;r<n.length;r++){for(var i={},l=n[r].getElementsByTagName("HostProperties")[0],c=l.getElementsByTagName("tag"),u=0;u<c.length;u++){var p=c[u],d=p.getAttribute("name"),m=p.innerHTML;"host-ip"===d&&(i["ip"]=m),"operating-system"===d&&(i["os"]=m),"host-fqdn"===d&&(i["hostname"]=m),"netbios-name"!==d||i["hostname"]||(i["hostname"]=m)}i["ip"]||(i["ip"]=n[r].getAttribute("name")||"n/a");var g=n[r].getElementsByTagName("ReportItem");i["services"]=[];for(u=0;u<g.length;u++){var h=g[u].getAttribute("port"),f=g[u].getAttribute("protocol"),v=g[u].getAttribute("svc_name"),b=g[u].getAttribute("svc_product"),y=g[u].getAttribute("svc_version");if("0"!==h){var w=i["services"].filter((function(t){return t.port==h})),k=0==w.length?{}:w[0];k["protocol"]=f,k["port"]=h,k["name"]=v||"n/a",k["product"]=b||"n/a",k["version"]=y||"n/a",0==w.length&&i["services"].push(k)}console.log("Service found: "+JSON.stringify(k))}console.log(i),o.push({label:i.ip,value:i.ip,host:i})}this.targetsOptions=o,a["a"].create({message:"Successfully imported ".concat(o.length," hosts"),color:"positive",textColor:"white",position:"top-right"})}catch(N){console.log(N),a["a"].create({message:"Error parsing Nessus",color:"negative",textColor:"white",position:"top-right"})}}}},u=c,p=o("2877"),d=Object(p["a"])(u,s,n,!1,null,null,null);e["default"]=d.exports}}]);